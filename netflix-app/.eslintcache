[{"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\index.js":"1","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\App.js":"2","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Connections\\TMDB.js":"3","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\FeatureMovie\\index.jsx":"4","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\MovieRow\\index.jsx":"5"},{"size":199,"mtime":1611716247029,"results":"6","hashOfConfig":"7"},{"size":1274,"mtime":1612011381648,"results":"8","hashOfConfig":"7"},{"size":2370,"mtime":1612011281882,"results":"9","hashOfConfig":"7"},{"size":137,"mtime":1612009848109,"results":"10","hashOfConfig":"7"},{"size":652,"mtime":1612010857221,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1cp0lmf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\index.js",[],["26","27"],"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\App.js",["28","29","30"],"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Connections\\TMDB.js",["31","32"],"const  {API_KEY, API_BASE} = require(\"../config/TMDB.json\")\r\nconst CONFIG = `api_key=${API_KEY}&language=pt-BR`\r\n\r\nconst basicFetch = async (endPoint) => {\r\n\r\n    const req = await fetch(`${API_BASE}${endPoint}`)\r\n    const json = await req.json();\r\n\r\n    return json\r\n}\r\n\r\nexport default {\r\n\r\n    getHomeList: async () => {\r\n\r\n        return [\r\n    \r\n            {\r\n                slug: 'original',\r\n                title: 'Originais da Netflix',\r\n                items: await basicFetch(`/discover/tv?${CONFIG}&with_network=213`)\r\n            },\r\n            \r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados',\r\n                items: await basicFetch(`/trending/all/week?${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'top rated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'Action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentario',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&${CONFIG}`)\r\n            },\r\n        ];\r\n    },\r\n\r\n    getInfo: async (id, type) => {\r\n\r\n        let info = {}\r\n\r\n        if(id){\r\n\r\n            switch (type) {\r\n\r\n                case 'movie':\r\n    \r\n                    info = await basicFetch(`/movie/{id}?${CONFIG}`)\r\n\r\n                break;\r\n\r\n                case 'tv':\r\n    \r\n                    info = await basicFetch(`/tv/{id}?${CONFIG}`)\r\n\r\n                break;\r\n            }\r\n\r\n        }\r\n        return info;\r\n    }\r\n    \r\n}","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\FeatureMovie\\index.jsx",["33"],"import React from 'react'\r\n\r\nimport './FeatureMovie.css'\r\n\r\nexport default () => (\r\n\r\n    <div>\r\n        Filme Em Destaque\r\n    </div>\r\n)","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\MovieRow\\index.jsx",["34"],"import React from 'react'\r\nimport './MovieRow.css'\r\n\r\nexport default ({title, itens}) => {\r\n    \r\n    return(\r\n        <div className=\"MovieRow\">\r\n\r\n          <h2 className=\"Title\">{title}</h2>\r\n\r\n          <div className=\"MovieRow--ListArea\">\r\n            <div className=\"MovieRow--List\">\r\n\r\n            {itens.results.length > 0 && itens.results.map((movie, key) => (\r\n\r\n              <div className=\"MovieRow--Item\">\r\n                <img src= {`https://image.tmdb.org/t/p/w300${movie.poster_path}`} alt={itens.original_title}/>\r\n              </div>\r\n              \r\n            ))}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":12,"column":1,"nodeType":"41","endLine":63,"endColumn":2},{"ruleId":"42","severity":1,"message":"43","line":15,"column":25,"nodeType":"44","messageId":"45","endLine":15,"endColumn":41},{"ruleId":"42","severity":1,"message":"46","line":31,"column":11,"nodeType":"44","messageId":"45","endLine":31,"endColumn":21},{"ruleId":"39","severity":1,"message":"47","line":12,"column":1,"nodeType":"41","endLine":93,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":74,"column":13,"nodeType":"50","messageId":"51","endLine":87,"endColumn":14},{"ruleId":"39","severity":1,"message":"40","line":5,"column":1,"nodeType":"41","endLine":10,"endColumn":2},{"ruleId":"39","severity":1,"message":"40","line":4,"column":1,"nodeType":"41","endLine":26,"endColumn":2},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'setSelectedMovie' is assigned a value but never used.","Identifier","unusedVar","'chosenInfo' is assigned a value but never used.","Assign object to a variable before exporting as module default","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]