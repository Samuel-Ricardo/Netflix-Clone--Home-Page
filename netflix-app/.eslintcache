[{"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\index.js":"1","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\App.js":"2","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Connections\\TMDB.js":"3","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\FeatureMovie\\index.jsx":"4","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\MovieRow\\index.jsx":"5","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\Header\\index.jsx":"6"},{"size":199,"mtime":1611716247029,"results":"7","hashOfConfig":"8"},{"size":1376,"mtime":1612494349106,"results":"9","hashOfConfig":"8"},{"size":2204,"mtime":1612011897385,"results":"10","hashOfConfig":"8"},{"size":1820,"mtime":1612493058443,"results":"11","hashOfConfig":"8"},{"size":652,"mtime":1612010857221,"results":"12","hashOfConfig":"8"},{"size":692,"mtime":1612497070391,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1cp0lmf",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\index.js",[],["30","31"],"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\App.js",["32"],"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Connections\\TMDB.js",["33"],"const  {API_KEY, API_BASE} = require(\"../config/TMDB.json\")\r\nconst CONFIG = `api_key=${API_KEY}&language=pt-BR`\r\n\r\nconst basicFetch = async (endPoint) => {\r\n\r\n    const req = await fetch(`${API_BASE}${endPoint}`)\r\n    const json = await req.json();\r\n\r\n    return json\r\n}\r\n\r\nexport default {\r\n\r\n    getHomeList: async () => {\r\n\r\n        return [\r\n    \r\n            {\r\n                slug: 'original',\r\n                title: 'Originais da Netflix',\r\n                items: await basicFetch(`/discover/tv?${CONFIG}&with_network=213`)\r\n            },\r\n            \r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados',\r\n                items: await basicFetch(`/trending/all/week?${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'top rated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'Action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentario',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&${CONFIG}`)\r\n            },\r\n        ];\r\n    },\r\n\r\n    getInfo: async (id, type) => {\r\n\r\n        //type - movie // tv(serie)\r\n\r\n        let info = {}\r\n\r\n        if(id){\r\n            if(type){\r\n                info = await basicFetch(`/${type}/${id}?${CONFIG}`)\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n    \r\n}","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\FeatureMovie\\index.jsx",["34"],"import React from 'react';\r\n\r\nimport './FeatureMovie.css';\r\n\r\nexport default ({movie}) =>{\r\n    \r\n    const movieDate = new Date(movie.first_air_date)\r\n    const genres = []\r\n\r\n    for (let cont in movie.genres ){\r\n        genres.push(movie.genres[cont].name)\r\n    }\r\n\r\n    return (\r\n\r\n\r\n    \r\n\r\n    <section className=\"Featured\" style={{\r\n        backgroundSize : 'cover',\r\n        backgroundPosition : 'center',\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${movie.backdrop_path})`\r\n    }}>\r\n\r\n    <div className=\"Featured--Vertical-Gradient\">\r\n        <div className=\"Featured--Horizontal-Gradient\">\r\n\r\n            <div className=\"Featured--Name\">\r\n                {movie.original_name}\r\n            </div>\r\n\r\n            <div className=\"Featured--Info\">\r\n                <div className=\"Featured--Rated\">\r\n                {movie.vote_average * 10}%\r\n                </div>\r\n\r\n                <div className=\"Featured--Year\">\r\n                    {movieDate.getFullYear()}\r\n                </div>\r\n\r\n                <div className=\"Featured--Seasons\">\r\n                    {movie.number_of_seasons} temporada{movie.number_of_seasons !== 1 ? \"s\" : ''}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Featured--Description\">\r\n              {movie.overview}  \r\n            </div>\r\n\r\n            <div className=\"Featured--Buttons\">\r\n                \r\n                <a href={`/wacht/${movie.id}`} className=\"Featured--WatchButton\"> ► Play</a>\r\n                <a href={`/list/add/${movie.id}`} className=\"Featured--MyListButton\"> + Minha Lista</a>\r\n                \r\n            </div>\r\n\r\n            <div className=\"Featured--Genres\">\r\n                <strong>Genres: </strong>{genres.join(', ')}\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    </section>\r\n )\r\n}","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\MovieRow\\index.jsx",["35"],"import React from 'react'\r\nimport './MovieRow.css'\r\n\r\nexport default ({title, itens}) => {\r\n    \r\n    return(\r\n        <div className=\"MovieRow\">\r\n\r\n          <h2 className=\"Title\">{title}</h2>\r\n\r\n          <div className=\"MovieRow--ListArea\">\r\n            <div className=\"MovieRow--List\">\r\n\r\n            {itens.results.length > 0 && itens.results.map((movie, key) => (\r\n\r\n              <div className=\"MovieRow--Item\">\r\n                <img src= {`https://image.tmdb.org/t/p/w300${movie.poster_path}`} alt={itens.original_title}/>\r\n              </div>\r\n              \r\n            ))}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\Header\\index.jsx",["36","37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":13,"column":1,"nodeType":"45","endLine":71,"endColumn":2},{"ruleId":"43","severity":1,"message":"46","line":12,"column":1,"nodeType":"45","endLine":82,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":5,"column":1,"nodeType":"45","endLine":65,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":4,"column":1,"nodeType":"45","endLine":26,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":4,"column":1,"nodeType":"45","endLine":28,"endColumn":2},{"ruleId":"47","severity":1,"message":"48","line":13,"column":21,"nodeType":"49","endLine":13,"endColumn":145},{"ruleId":"47","severity":1,"message":"48","line":21,"column":21,"nodeType":"49","endLine":21,"endColumn":110},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]