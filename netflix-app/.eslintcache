[{"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\index.js":"1","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\App.js":"2","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Connections\\TMDB.js":"3","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\FeatureMovie\\index.jsx":"4","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\MovieRow\\index.jsx":"5","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\Header\\index.jsx":"6","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\Loading\\index.jsx":"7"},{"size":199,"mtime":1611716247029,"results":"8","hashOfConfig":"9"},{"size":3551,"mtime":1612923715400,"results":"10","hashOfConfig":"9"},{"size":2204,"mtime":1612011897385,"results":"11","hashOfConfig":"9"},{"size":1820,"mtime":1612493058443,"results":"12","hashOfConfig":"9"},{"size":1951,"mtime":1612924691628,"results":"13","hashOfConfig":"9"},{"size":726,"mtime":1612619364855,"results":"14","hashOfConfig":"9"},{"size":809,"mtime":1612710618377,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1cp0lmf",{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\index.js",[],["35","36"],"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\App.js",["37","38","39","40","41","42","43","44","45"],"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Connections\\TMDB.js",["46"],"const  {API_KEY, API_BASE} = require(\"../config/TMDB.json\")\r\nconst CONFIG = `api_key=${API_KEY}&language=pt-BR`\r\n\r\nconst basicFetch = async (endPoint) => {\r\n\r\n    const req = await fetch(`${API_BASE}${endPoint}`)\r\n    const json = await req.json();\r\n\r\n    return json\r\n}\r\n\r\nexport default {\r\n\r\n    getHomeList: async () => {\r\n\r\n        return [\r\n    \r\n            {\r\n                slug: 'original',\r\n                title: 'Originais da Netflix',\r\n                items: await basicFetch(`/discover/tv?${CONFIG}&with_network=213`)\r\n            },\r\n            \r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados',\r\n                items: await basicFetch(`/trending/all/week?${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'top rated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'Action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentario',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&${CONFIG}`)\r\n            },\r\n        ];\r\n    },\r\n\r\n    getInfo: async (id, type) => {\r\n\r\n        //type - movie // tv(serie)\r\n\r\n        let info = {}\r\n\r\n        if(id){\r\n            if(type){\r\n                info = await basicFetch(`/${type}/${id}?${CONFIG}`)\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n    \r\n}","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\FeatureMovie\\index.jsx",["47"],"import React from 'react';\r\n\r\nimport './FeatureMovie.css';\r\n\r\nexport default ({movie}) =>{\r\n    \r\n    const movieDate = new Date(movie.first_air_date)\r\n    const genres = []\r\n\r\n    for (let cont in movie.genres ){\r\n        genres.push(movie.genres[cont].name)\r\n    }\r\n\r\n    return (\r\n\r\n\r\n    \r\n\r\n    <section className=\"Featured\" style={{\r\n        backgroundSize : 'cover',\r\n        backgroundPosition : 'center',\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${movie.backdrop_path})`\r\n    }}>\r\n\r\n    <div className=\"Featured--Vertical-Gradient\">\r\n        <div className=\"Featured--Horizontal-Gradient\">\r\n\r\n            <div className=\"Featured--Name\">\r\n                {movie.original_name}\r\n            </div>\r\n\r\n            <div className=\"Featured--Info\">\r\n                <div className=\"Featured--Rated\">\r\n                {movie.vote_average * 10}%\r\n                </div>\r\n\r\n                <div className=\"Featured--Year\">\r\n                    {movieDate.getFullYear()}\r\n                </div>\r\n\r\n                <div className=\"Featured--Seasons\">\r\n                    {movie.number_of_seasons} temporada{movie.number_of_seasons !== 1 ? \"s\" : ''}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Featured--Description\">\r\n              {movie.overview}  \r\n            </div>\r\n\r\n            <div className=\"Featured--Buttons\">\r\n                \r\n                <a href={`/wacht/${movie.id}`} className=\"Featured--WatchButton\"> ► Play</a>\r\n                <a href={`/list/add/${movie.id}`} className=\"Featured--MyListButton\"> + Minha Lista</a>\r\n                \r\n            </div>\r\n\r\n            <div className=\"Featured--Genres\">\r\n                <strong>Genres: </strong>{genres.join(', ')}\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    </section>\r\n )\r\n}","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\MovieRow\\index.jsx",["48","49","50","51","52"],"D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\Header\\index.jsx",["53","54","55"],"import React from 'react'\r\nimport './Header.css'\r\n\r\nexport default ({isBlack}) => {\r\n\r\n    return (\r\n        \r\n        <header className={isBlack ? 'Black' : 'Gradient'}>\r\n\r\n            <div className=\"Header--Logo\">\r\n\r\n                <a href=\"/\">\r\n                    <img src= 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png'></img>\r\n                </a>\r\n\r\n            </div>\r\n            \r\n            <div className=\"Header--User\">\r\n\r\n                <a href=\"/\">\r\n                    <img src= 'https://i.pinimg.com/originals/30/db/47/30db479e1558c3ed46b4ed23b3cd98ae.png'></img>\r\n                </a>\r\n\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}","D:\\Visual Studio Code\\Projects\\Recreate-Netflix\\netflix-app\\src\\Components\\Loading\\index.jsx",["56","57","58","59"],"import { Height } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport './Loading.css'\r\n\r\nexport default ({src, exitTime}) => {\r\n\r\n    const [exit, setExit] = React.useState(false)\r\n\r\n    if(exitTime > 0){\r\n\r\n         \r\n        setTimeout (() => {\r\n\r\n            setExit(true)\r\n\r\n        }, exitTime) \r\n\r\n\r\n        return(\r\n\r\n            <div>\r\n\r\n                {exit ? null\r\n                        :\r\n                    <div className='Loaded'>\r\n                \r\n                        <img src={src}>\r\n                        </img>\r\n                    \r\n                    </div>\r\n    }\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className='Loading'>\r\n\r\n            <img src={src}>\r\n            </img>\r\n            \r\n        </div>\r\n    )\r\n}",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":14,"column":1,"nodeType":"66","endLine":134,"endColumn":2},{"ruleId":"67","severity":1,"message":"68","line":98,"column":53,"nodeType":"69","endLine":98,"endColumn":108},{"ruleId":"70","severity":1,"message":"71","line":98,"column":108,"nodeType":"69","endLine":98,"endColumn":250},{"ruleId":"67","severity":1,"message":"68","line":102,"column":34,"nodeType":"69","endLine":102,"endColumn":111},{"ruleId":"67","severity":1,"message":"68","line":110,"column":16,"nodeType":"69","endLine":110,"endColumn":93},{"ruleId":"67","severity":1,"message":"68","line":110,"column":109,"nodeType":"69","endLine":110,"endColumn":169},{"ruleId":"67","severity":1,"message":"68","line":110,"column":183,"nodeType":"69","endLine":110,"endColumn":270},{"ruleId":"67","severity":1,"message":"68","line":110,"column":284,"nodeType":"69","endLine":110,"endColumn":359},{"ruleId":"67","severity":1,"message":"68","line":114,"column":30,"nodeType":"69","endLine":114,"endColumn":115},{"ruleId":"64","severity":1,"message":"72","line":12,"column":1,"nodeType":"66","endLine":82,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":5,"column":1,"nodeType":"66","endLine":65,"endColumn":2},{"ruleId":"73","severity":1,"message":"74","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":17},{"ruleId":"64","severity":1,"message":"65","line":9,"column":1,"nodeType":"66","endLine":80,"endColumn":2},{"ruleId":"73","severity":1,"message":"77","line":12,"column":10,"nodeType":"75","messageId":"76","endLine":12,"endColumn":23},{"ruleId":"73","severity":1,"message":"78","line":12,"column":25,"nodeType":"75","messageId":"76","endLine":12,"endColumn":41},{"ruleId":"73","severity":1,"message":"79","line":38,"column":9,"nodeType":"75","messageId":"76","endLine":38,"endColumn":15},{"ruleId":"64","severity":1,"message":"65","line":4,"column":1,"nodeType":"66","endLine":28,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":13,"column":21,"nodeType":"69","endLine":13,"endColumn":145},{"ruleId":"70","severity":1,"message":"71","line":21,"column":21,"nodeType":"69","endLine":21,"endColumn":110},{"ruleId":"73","severity":1,"message":"80","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":5,"column":1,"nodeType":"66","endLine":47,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":27,"column":25,"nodeType":"69","endLine":27,"endColumn":40},{"ruleId":"70","severity":1,"message":"71","line":42,"column":13,"nodeType":"69","endLine":42,"endColumn":28},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Assign object to a variable before exporting as module default","no-unused-vars","'MovieItem' is defined but never used.","Identifier","unusedVar","'selectedMovie' is assigned a value but never used.","'setSelectedMovie' is assigned a value but never used.","'select' is assigned a value but never used.","'Height' is defined but never used.","no-global-assign","no-unsafe-negation"]