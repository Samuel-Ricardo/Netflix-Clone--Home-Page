{"version":3,"sources":["Components/MovieItem/index.jsx","Components/MovieRow/index.jsx","Components/FeatureMovie/index.jsx","Components/Header/index.jsx","Components/Loading/index.jsx","Connections/TMDB.js","App.js","index.js"],"names":["MovieItem","selectMovie","props","select","movie","bind","className","onClick","this","src","poster_path","alt","itens","original_title","React","Component","title","onSelect","useState","scrollX","setScrollX","x","Math","round","window","innerWidth","listWidth","results","length","style","fontSize","width","marginLeft","map","key","Date","first_air_date","movieDate","genres","cont","pop","push","name","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","overview","href","id","join","isBlack","exitTime","exit","setExit","setTimeout","require","API_KEY","API_BASE","CONFIG","basicFetch","endPoint","a","fetch","req","json","getHomeList","slug","items","getInfo","type","info","movieLists","setMovieLists","selectedMovie","setSelectedMovie","isHeaderBlack","setIsHeaderBlack","useEffect","TMDB","list","console","log","original","filter","movieList","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d97e7336.chunk.js","sourcesContent":["import React from 'react'\r\nimport './MovieItem.css'\r\n\r\nexport default class MovieItem extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        \r\n        this.selectMovie = this.selectMovie.bind(this)\r\n    }\r\n\r\n\r\n    selectMovie = () => {\r\n\r\n        this.props.select(this.props.movie)\r\n    }\r\n\r\n    render (){\r\n\r\n        return(\r\n            <div className=\"MovieRow--Item\" onClick={this.selectMovie}>\r\n\r\n                <img src= {`https://image.tmdb.org/t/p/w300${this.props.movie.poster_path}`} alt={this.props.itens.original_title}/>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n ","import React from 'react'\r\nimport './MovieRow.css'\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\n\r\nimport MovieItem from '../MovieItem'\r\n\r\nexport default ({title, itens, onSelect}) => {\r\n\r\n  const [scrollX, setScrollX] = React.useState(0)\r\n  \r\n  const handlerLeftArrow = () => {\r\n\r\n    let x = scrollX + Math.round(window.innerWidth / 2)\r\n\r\n    if(x > 0){\r\n      \r\n      x = 0\r\n    }\r\n\r\n    setScrollX(x)\r\n  }\r\n\r\n  const handlerRightArrow = () => {\r\n\r\n    let x = scrollX - Math.round(window.innerWidth / 2)\r\n\r\n    let listWidth = itens.results.length * 150\r\n\r\n    if((window.innerWidth - listWidth) > x ){\r\n      x = (window.innerWidth - listWidth) - 80\r\n    }\r\n      setScrollX(x)\r\n  } \r\n\r\n\r\n    return(\r\n        <div className=\"MovieRow\">\r\n\r\n          <div className=\"MovieRow--Right\" onClick={handlerRightArrow}>\r\n            <NavigateNextIcon style={{fontSize: 50}}/>\r\n          </div>\r\n\r\n          <div className=\"MovieRow--Left\" onClick={handlerLeftArrow}>\r\n            <NavigateBeforeIcon style={{fontSize: 50}}/>\r\n          </div>\r\n\r\n          <h2 className=\"Title\">{title}</h2>\r\n\r\n          <div className=\"MovieRow--ListArea\">\r\n            <div className=\"MovieRow--List\"\r\n            \r\n              style={{\r\n                width : itens.results.length * 150,\r\n                marginLeft: scrollX\r\n              }}\r\n            >\r\n\r\n            {itens.results.length > 0 && itens.results.map((movie, key) => (\r\n              \r\n              <MovieItem movie={movie} itens={itens} select={onSelect} />\r\n              \r\n            ))}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nimport './FeatureMovie.css';\r\n\r\nexport default ({movie}) =>{\r\n\r\n    const [movieDate, setmovieDate] = useState(new Date(movie.first_air_date))\r\n\r\n    const [genres, setGenres] = useState([])\r\n\r\n\r\n\r\n    for (let cont in movie.genres) {\r\n\r\n        while(genres.length > 0) {\r\n            genres.pop();\r\n        }\r\n\r\n        genres.push(movie.genres[cont].name)\r\n    }\r\n\r\n    return (\r\n\r\n\r\n\r\n\r\n    <section className=\"Featured\" style={{\r\n        backgroundSize : 'cover',\r\n        backgroundPosition : 'center',\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${movie.backdrop_path})`\r\n    }}>\r\n\r\n    <div className=\"Featured--Vertical-Gradient\">\r\n        <div className=\"Featured--Horizontal-Gradient\">\r\n\r\n            <div className=\"Featured--Name\">\r\n                {movie.original_name}\r\n            </div>\r\n\r\n            <div className=\"Featured--Info\">\r\n                <div className=\"Featured--Rated\">\r\n                {movie.vote_average * 10}%\r\n                </div>\r\n\r\n                <div className=\"Featured--Year\">\r\n                    {movieDate.getFullYear()}\r\n                </div>\r\n\r\n                <div className=\"Featured--Seasons\">\r\n                    {movie.number_of_seasons} temporada{movie.number_of_seasons !== 1 ? \"s\" : ''}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Featured--Description\">\r\n              {movie.overview}\r\n            </div>\r\n\r\n            <div className=\"Featured--Buttons\">\r\n\r\n                <a href={`/wacht/${movie.id}`} className=\"Featured--WatchButton\"> ► Play</a>\r\n                <a href={`/list/add/${movie.id}`} className=\"Featured--MyListButton\"> + Minha Lista</a>\r\n\r\n            </div>\r\n\r\n            <div className=\"Featured--Genres\">\r\n                <strong>Genres: </strong>{genres.join(', ')}\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    </section>\r\n )\r\n}\r\n","import React from 'react'\r\nimport './Header.css'\r\n\r\nexport default ({isBlack}) => {\r\n\r\n    return (\r\n        \r\n        <header className={isBlack ? 'Black' : 'Gradient'}>\r\n\r\n            <div className=\"Header--Logo\">\r\n\r\n                <a href=\"/\">\r\n                    <img src= 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png'></img>\r\n                </a>\r\n\r\n            </div>\r\n            \r\n            <div className=\"Header--User\">\r\n\r\n                <a href=\"/\">\r\n                    <img src= 'https://i.pinimg.com/originals/30/db/47/30db479e1558c3ed46b4ed23b3cd98ae.png'></img>\r\n                </a>\r\n\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}","import { Height } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport './Loading.css'\r\n\r\nexport default ({src, exitTime}) => {\r\n\r\n    const [exit, setExit] = React.useState(false)\r\n\r\n    if(exitTime > 0){\r\n\r\n         \r\n        setTimeout (() => {\r\n\r\n            setExit(true)\r\n\r\n        }, exitTime) \r\n\r\n\r\n        return(\r\n\r\n            <div>\r\n\r\n                {exit ? null\r\n                        :\r\n                    <div className='Loaded'>\r\n                \r\n                        <img src={src}>\r\n                        </img>\r\n                    \r\n                    </div>\r\n    }\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className='Loading'>\r\n\r\n            <img src={src}>\r\n            </img>\r\n            \r\n        </div>\r\n    )\r\n}","const  {API_KEY, API_BASE} = require(\"../config/TMDB.json\")\r\nconst CONFIG = `api_key=${API_KEY}&language=pt-BR`\r\n\r\nconst basicFetch = async (endPoint) => {\r\n\r\n    const req = await fetch(`${API_BASE}${endPoint}`)\r\n    const json = await req.json();\r\n\r\n    return json\r\n}\r\n\r\nexport default {\r\n\r\n    getHomeList: async () => {\r\n\r\n        return [\r\n    \r\n            {\r\n                slug: 'original',\r\n                title: 'Originais da Netflix',\r\n                items: await basicFetch(`/discover/tv?${CONFIG}&with_network=213`)\r\n            },\r\n            \r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados',\r\n                items: await basicFetch(`/trending/all/week?${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'top rated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'Action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&${CONFIG}`)\r\n            },\r\n    \r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&${CONFIG}`)\r\n            },\r\n            \r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentario',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&${CONFIG}`)\r\n            },\r\n        ];\r\n    },\r\n\r\n    getInfo: async (id, type) => {\r\n\r\n        //type - movie // tv(serie)\r\n\r\n        let info = {}\r\n\r\n        if(id){\r\n            if(type){\r\n                info = await basicFetch(`/${type}/${id}?${CONFIG}`)\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n    \r\n}","import React, {useEffect, useState} from 'react'\n\nimport MovieRow from \"./Components/MovieRow\"\nimport FeatureMovie from './Components/FeatureMovie'\nimport Header from './Components/Header'\nimport Loading from './Components/Loading'\n\nimport './App.css';\n\nimport TMDB from \"../src/Connections/TMDB\"\n\n\n\nexport default () => {\n\n  const [movieLists, setMovieLists] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null)\n  const [isHeaderBlack, setIsHeaderBlack] = useState(false)\n\n\n  useEffect(() => {\n  \n    const loadAll = async () => {\n  \n      let list = await TMDB.getHomeList()\n      \n      console.log(list)\n\n      setMovieLists(list)\n\n      let original = list.filter(movieList => movieList.slug === 'original')\n\n      let randomChosen = Math.floor(Math.random() * (original[0].items.results.length - 1 ))\n\n      let chosen = original[0].items.results[randomChosen]\n      let chosenInfo = await TMDB.getInfo(chosen.id, 'tv')\n\n      setSelectedMovie(chosenInfo)\n\n      console.log(\"ESCOLHIDO\")\n      console.log(chosenInfo)\n\n    }\n  \n    loadAll();\n\n  }, [])\n\n\n  useEffect(()=> {\n\n    const scrollListener = () => {\n\n      if(window.scrollY > 50){\n        setIsHeaderBlack(true)\n      }else{\n        setIsHeaderBlack(false)\n      }\n\n    }\n\n    window.addEventListener('scroll',scrollListener)\n\n    return () => {\n      window.removeEventListener('scroll',scrollListener)\n    }\n\n  },[])\n\n  return(\n\n    <div className=\"Page\">\n\n      <Header isBlack={isHeaderBlack}/>\n\n      {selectedMovie && \n        <FeatureMovie movie={selectedMovie}/>}\n\n      <section className=\"Lists\">\n\n      {console.log(movieLists)}\n\n       {movieLists.map((movieList, key) =>(\n         \n         <MovieRow key={key} itens={movieList.items} title={movieList.title} onSelect={setSelectedMovie}/>\n         \n       ))}\n\n      </section>\n      \n      <footer>\n      \n            <p>\n                Copyright &copy; NETFLIX Brasil. Todos Direitos Reservados\n            </p>\n\n            <p id=\"TMDB\">\n                 &copy; Dados dos Filmes / Séries - <a href=\"https://www.themoviedb.org/\" target=\"_blank\" ><img src='https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_1-5bdc75aaebeb75dc7ae79426ddd9be3b2be1e342510f8202baf6bffa71d7f5c4.svg'></img></a> \n            </p>\n\n            <p>\n                 &copy; Criador: <a href=\"https://www.linkedin.com/in/samuel-ricardo-cabral/\" target=\"_blank\">Samuel Ricardo Cabral de Barros</a> - Programmer\n           </p>\n\n           <p>\n               Dá uma olhada por aqui :)\n           </p>\n\n           <p>\n            || <a href=\"https://www.linkedin.com/in/samuel-ricardo-cabral/\" target=\"_blank\">LinkedIn</a> || <a href=\"https://github.com/Samuel-Ricardo\" target=\"_blank\">GitHub</a> || <a href=\"https://www.upwork.com/o/profiles/users/~013ef0c3301efacbdd/\" target=\"_blank\">Upwork</a> || <a href=\"https://www.99freelas.com.br/user/Samuel_Ricardo\" target=\"_blank\">99Freelas</a> || \n           </p>\n\n           <p>\n           GitHub do Projeto <a href=\"https://github.com/Samuel-Ricardo/Netflix-Clone--Home-Page\" target=\"_blank\">Netflix-Clone</a>\n           </p>\n\n      </footer>\n\n\n\n        {movieLists.length <=0 &&    \n      \n          <Loading src={'https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2560%2Cc_limit/Netflix_LoadTime.gif'} />\n        }\n        \n        {movieLists.length >0 &&    \n      \n          <Loading src={'https://haasentertainment.com/wp-content/uploads/2019/11/ReflectingNeglectedBug-size_restricted.gif'} exitTime={3050}/>\n        }\n        \n\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}